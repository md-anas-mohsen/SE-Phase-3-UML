<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><help_text></help_text><element><id>UMLClass</id><coordinates><x>470</x><y>830</y><w>610</w><h>280</h></coordinates><panel_attributes>AccountManagement
--
- email: String
- password: String
- username: String
- avatarURL: String
- playerId: int
--
+ login(email: String, password: String): String
+ register(email: String, password: String, username: String, avatarURL:String)
+ updateProfile(username:String, avatarURL:String)
+ updateProfile(username:String, avatarURL:String, oldPassword:String, newPassword:String)
+ forgetPassword(email:String)
+ resetPassword(token:String, newPassword:String, confirmPassword:String)
+ getEmail(): String
+ getAvatar(): String
+ getUsername(): String
+blockPlayer(userId:int)
+unblockPlayer(userId:int)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>550</x><y>730</y><w>140</w><h>70</h></coordinates><panel_attributes>The login function 
returns a token which
is a String.</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>840</x><y>1910</y><w>540</w><h>220</h></coordinates><panel_attributes>/Piece/
--
# x: int
# y: int
# alive: boolean
# playerId: String
# color: int
# pieceId: int
# belongsTo: Player
--
+ move(square: Square): void
+ getLocation(): Point
/+ getValidMoves(boardState: Square[8[[8], currentSquare: Square): List&lt;Square&gt;/
/+ renderPiece(): void/</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>840</x><y>1720</y><w>160</w><h>140</h></coordinates><panel_attributes>Point
--
- x: int
- y: int
--
+ setX(x: int): void
+ setY(y: int): void
+ getX(): int
+ getY(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>520</x><y>2000</y><w>260</w><h>70</h></coordinates><panel_attributes>The promote() method in ChessPiece
returns the pieceId of the newly 
promoted piece which is a number.</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>2120</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1070</x><y>2370</y><w>520</w><h>120</h></coordinates><panel_attributes>Knight
--
+ Knight(color: String, player: Player): Knight
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>2180</y><w>600</w><h>270</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;580;10;580;250;500;250</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1210</x><y>1200</y><w>440</w><h>160</h></coordinates><panel_attributes>Board
--
- boardState: Square[8][8]
--
+ initializeBoard(): void
+ renderBoard(): void
+ getSquare(point: Point): Square
+ getBoardState(): Square[8][8]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2560</x><y>1460</y><w>330</w><h>180</h></coordinates><panel_attributes>SinglePlayerChessGame
--
- player: Player
- computer: Computer
- playerSelectedSquare: Square
- playerDestinationSquare: Square
- playerTurn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayerSelectedSquare(TBD): void
+ setPlayerTurn(playerTurn: boolean): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>1480</y><w>630</w><h>90</h></coordinates><panel_attributes>PlayerMove
--
- player: Player
--
+ PlayerMove(player: Player, piece: Piece, fromSquare: Square, toSquare: Square): PlayerMove
+ getPlayer(): Player</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1330</x><y>1660</y><w>440</w><h>140</h></coordinates><panel_attributes>Square
--
- piece: Piece
- point: Point
--
+ Square(piece: Piece, point: Point): Square
+ setPiece(piece: Piece): void
+ getPiece(): Piece
+ renderSquare(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1410</x><y>1350</y><w>40</w><h>330</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=64</panel_attributes><additional_attributes>10;10;10;310</additional_attributes></element><element><id>Relation</id><coordinates><x>1090</x><y>1770</y><w>260</w><h>160</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>240;10;10;10;10;140</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2750</x><y>1150</y><w>330</w><h>210</h></coordinates><panel_attributes>/ChessGame/
--
# kingChecked: String
# kingCheckmated: String
--
/+ playGame(): void/
/+ addMove(move: Move): void/
+ inCheck(): boolean
+ isCheckmated(): boolean
+ isEnded(): boolean
+ promotablePawnSquare(): Square 
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1490</x><y>1490</y><w>300</w><h>140</h></coordinates><panel_attributes>Player
--
- user: User
- color: int
--
+ Player(user: User, color: int): Player
+ getPlayerUsername(): String
+ getPlayerId(): String
+ getColor(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1650</x><y>1400</y><w>140</w><h>70</h></coordinates><panel_attributes>Player is used in 
chess game </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>3260</x><y>710</y><w>130</w><h>80</h></coordinates><panel_attributes>Domain for result
--
"BLACK_WIN"
"WHITE_WIN"
"DRAW"</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>1490</x><y>1390</y><w>130</w><h>80</h></coordinates><panel_attributes>Domain for color
--
BLACK: 0
WHITE: 1</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>2720</x><y>1000</y><w>190</w><h>80</h></coordinates><panel_attributes>Domain for kingChecked
--
"BLACK_IN_CHECK"
"WHITE_IN_CHECK"
"NONE"</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>2920</x><y>1000</y><w>190</w><h>80</h></coordinates><panel_attributes>Domain for kingCheckmated
--
"BLACK_CHECKMATED"
"WHITE_CHECKMATED"
"NONE"</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>3830</x><y>0</y><w>290</w><h>200</h></coordinates><panel_attributes>/Replay/
--
# gameId: String
# gameMoves: List&lt;Moves&gt;
# moveNumber: int
# board: Board
--
+ play(): void
+ getMoveNumber(): int
+ playFromMove(moveNumber: int): void
+ nextMove(): void
+ lastMove(): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>5490</x><y>1050</y><w>310</w><h>110</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
Computer
--
/+ checkOccupiedSquares(): void/
/+ getOccupiedSquares(): List&lt;Piece&gt;/
/+ generateMove(): Move/</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>5150</x><y>1300</y><w>330</w><h>170</h></coordinates><panel_attributes>RookieComputer
--
- squaresOccupied: List&lt;Square&gt;
- color: int
- DIFFICULTY_LEVEL: int
--
+ RookieComputer(color: String): RookieComputer
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Piece&gt;
+ generateMove(): Move
+ getColor(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>5620</x><y>1150</y><w>30</w><h>170</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>UMLClass</id><coordinates><x>4680</x><y>1180</y><w>370</w><h>90</h></coordinates><panel_attributes>ComputerFactory
--
+ createComputer(difficulty: String, color: int): Computer</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>4780</x><y>1080</y><w>160</w><h>80</h></coordinates><panel_attributes>Domain for difficulty
--
"EASY"
"MEDIUM"
"HARD"</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>5100</x><y>1030</y><w>1090</w><h>480</h></coordinates><panel_attributes></panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>4850</x><y>1260</y><w>270</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
creates</panel_attributes><additional_attributes>250;30;10;30;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>5490</x><y>1300</y><w>330</w><h>170</h></coordinates><panel_attributes>IntermediateComputer
--
- squaresOccupied: List&lt;Square&gt;
- color: int
- DIFFICULTY_LEVEL: int
--
+ MediumComputer(color: int): MediumComputer
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Piece&gt;
+ generateMove(): Move
+ getColor(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>5830</x><y>1300</y><w>310</w><h>170</h></coordinates><panel_attributes>GrandMasterComputer
--
- squaresOccupied: List&lt;Square&gt;
- color: int
- DIFFICULTY_LEVEL: int
--
+ HardComputer(color: int): HardComputer
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Piece&gt;
+ generateMove(): Move
+ getColor(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>5290</x><y>1220</y><w>340</w><h>100</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>320;10;10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>5610</x><y>1220</y><w>400</w><h>100</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;380;10;380;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1070</x><y>2220</y><w>520</w><h>120</h></coordinates><panel_attributes>Pawn
--
+ Pawn(color: String, player: Player): Pawn
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ promoteTo(): Piece
+ renderPiece(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1070</x><y>2520</y><w>520</w><h>120</h></coordinates><panel_attributes>Queen
--
+ Queen(color: String, player: Player): Queen
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1070</x><y>2670</y><w>520</w><h>120</h></coordinates><panel_attributes>Bishop
--
+ Bishop(color: String, player: Player): Bishop
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1070</x><y>2820</y><w>520</w><h>120</h></coordinates><panel_attributes>Rook
--
+ Rook(color: String, player: Player): Rook
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1070</x><y>2980</y><w>520</w><h>120</h></coordinates><panel_attributes>King
--
+ Rook(color: String, player: Player): Rook
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1580</x><y>2420</y><w>110</w><h>180</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;90;160;10;160</additional_attributes></element><element><id>Relation</id><coordinates><x>1580</x><y>2570</y><w>110</w><h>180</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;90;160;10;160</additional_attributes></element><element><id>Relation</id><coordinates><x>1580</x><y>2720</y><w>110</w><h>190</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;90;170;10;170</additional_attributes></element><element><id>Relation</id><coordinates><x>1580</x><y>2880</y><w>110</w><h>180</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;90;160;10;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>510</x><y>2220</y><w>520</w><h>120</h></coordinates><panel_attributes>Checker
--
+ Checker(color: String, player: Player): Checker
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ promoteTo(): Piece
+ renderPiece(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>510</x><y>2380</y><w>520</w><h>120</h></coordinates><panel_attributes>KingChecker
--
+ KingChecker(color: String, player: Player): KingChecker
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>3580</x><y>860</y><w>340</w><h>150</h></coordinates><panel_attributes>Leaderboard
--
+ readRecordsFromDB(): void
+ resetLeaderboard(): void
+ getRecords(): List&lt;LeaderboardRecord&gt;
+ sortRecords(criteria: int): void
+ getRecord(userId: String): LeaderboardRecord

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>2910</x><y>1420</y><w>320</w><h>310</h></coordinates><panel_attributes>MultiPlayerChessGame
--
- player1: Player
- player2: Player
- player1SelectedSquare: Square
- player2SelectedSquare: Square
- player1DestinationSquare: Square
- player2DestinationSquare: Square
- player1Turn: boolean
- player2Turn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayer1SelectedSquare(TBD): void
+ setPlayer2SelectedSquare(TBD): void
+ setPlayer1Turn(player1Turn: boolean): void
+ setPlayer1Turn(player2Turn: boolean): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2710</x><y>1350</y><w>210</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;190;50;10;50;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3300</x><y>1890</y><w>220</w><h>80</h></coordinates><panel_attributes>Lobby
--
- usersQueue: Queue&lt;User&gt;
--
+ matchUp(): Player[2]</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2890</x><y>1390</y><w>210</w><h>50</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;190;10;190;30</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3170</x><y>850</y><w>330</w><h>200</h></coordinates><panel_attributes>/Game/
--
# board: Board
# movesMade: List&lt;Move&gt;
# result: String
# gameEnded: boolean
# gameId: String
# moveCounter: int
--
/+ playGame(): void/
/+ addMove(move: Move): void/
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>3600</x><y>1140</y><w>330</w><h>210</h></coordinates><panel_attributes>/CheckersGame/
--
# whiteCheckersCount: int
# blackCheckersCount: int
--
/+ playGame(): void/
/+ addMove(move: Move): void/
+ isEnded(): boolean
+ promotableCheckerSquare(): Square 
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>2920</x><y>1040</y><w>410</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>390;10;390;60;10;60;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>3300</x><y>1090</y><w>490</w><h>70</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;470;10;470;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3440</x><y>1450</y><w>330</w><h>180</h></coordinates><panel_attributes>SinglePlayerCheckersGame
--
- player: Player
- computer: Computer
- playerSelectedSquare: Square
- playerTurn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayerSelectedSquare(TBD): void
+ setPlayerTurn(playerTurn: boolean): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>3790</x><y>1450</y><w>320</w><h>270</h></coordinates><panel_attributes>MultiPlayerCheckersGame
--
- player1: Player
- player2: Player
- player1SelectedSquare: Square
- player2SelectedSquare: Square
- player1Turn: boolean
- player2Turn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayer1SelectedSquare(TBD): void
+ setPlayer2SelectedSquare(TBD): void
+ setPlayer1Turn(player1Turn: boolean): void
+ setPlayer1Turn(player2Turn: boolean): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>3770</x><y>1380</y><w>210</w><h>90</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;190;10;190;70</additional_attributes></element><element><id>Relation</id><coordinates><x>3590</x><y>1340</y><w>210</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;190;50;10;50;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>430</x><y>2180</y><w>690</w><h>280</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>670;10;10;10;10;260;80;260</additional_attributes></element><element><id>Relation</id><coordinates><x>430</x><y>2270</y><w>100</w><h>30</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;80;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1580</x><y>2280</y><w>110</w><h>30</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>90;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>4210</x><y>860</y><w>300</w><h>150</h></coordinates><panel_attributes>LeaderboardRecord
--
- userId: String
- wins: int
- losses: int
--
+ updateRecord(wins: int, losses: int): void
+ updateRecord(wins: int: void
+ updateRecord(losses: int): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>400</x><y>1220</y><w>470</w><h>180</h></coordinates><panel_attributes>/Move/
--
# moveNumber: int
# pieceId: int
# fromSquare: Square
# toSquare: Square
--
+ getFromSquare(): Square
+ getToSquare(): Square
+ getPieceId(): int
+ getMoveNumber(): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>680</x><y>1480</y><w>690</w><h>90</h></coordinates><panel_attributes>ComputerMove
--
- difficultyLevel: int
--
+ ComputerMove(difficultyLevel: int, piece: Piece, fromSquare: Square, toSquare: Square): ComputerMove
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>230</x><y>1390</y><w>420</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>400;10;400;50;10;50;10;90</additional_attributes></element><element><id>Relation</id><coordinates><x>620</x><y>1390</y><w>390</w><h>110</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;10;50;370;50;370;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>3290</x><y>270</y><w>660</w><h>150</h></coordinates><panel_attributes>SingleplayerReplay
--
- playerId: String
- playerWon: boolean
- computerWon: boolean
--
+ SingleplayerReplay(gameId: String, playerId: String, gameMoves: List&lt;Moves&gt;): SingleplayerReplay</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>4000</x><y>270</y><w>720</w><h>150</h></coordinates><panel_attributes>MultiplayerReplay
--
- player1Id: String
- player2Id: String
- player1Won: boolean
- player2Won: boolean
--
+ Multiplayer(gameId: String, player1Id: String, player2Id: String, gameMoves: List&lt;Moves&gt;): MultiplayerReplay</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>3600</x><y>190</y><w>390</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>370;10;370;50;10;50;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>3960</x><y>230</y><w>400</w><h>60</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>10;10;380;10;380;40</additional_attributes></element><element><id>Relation</id><coordinates><x>3910</x><y>910</y><w>320</w><h>50</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=n
- records</panel_attributes><additional_attributes>10;20;300;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>2850</x><y>810</y><w>250</w><h>120</h></coordinates><panel_attributes>Connection
--
- ip: String
--</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1180</x><y>830</y><w>230</w><h>160</h></coordinates><panel_attributes>AuthGuard
--
-token: String
--
+AuthGuard(token:String)
+isAuthenticated() : boolean
+isAuthorized() : boolean
+isPlayer() : boolean
+isAdmin() : boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>240</x><y>170</y><w>190</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;10;170;10</additional_attributes></element><element><id>Relation</id><coordinates><x>240</x><y>170</y><w>190</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;10;170;10</additional_attributes></element><element><id>Relation</id><coordinates><x>240</x><y>170</y><w>190</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;10;170;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>1070</x><y>730</y><w>140</w><h>70</h></coordinates><panel_attributes>Roles are Player and 
Admin
bg=white</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>3300</x><y>1670</y><w>210</w><h>150</h></coordinates><panel_attributes>ConnectionMangement
--
-connectionId:string
--
-createConnection():connectionId
-connectionStatus(): boolean
-terminateConnection(): boolean
-updateStatus() : void

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>3110</x><y>1110</y><w>190</w><h>40</h></coordinates><panel_attributes>createConnection is using ip 
address to create a connection
bg=white</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>230</x><y>170</y><w>190</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;10;170;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>910</y><w>130</w><h>30</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>110;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>3400</x><y>1810</y><w>30</w><h>100</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>3500</x><y>1710</y><w>480</w><h>140</h></coordinates><panel_attributes>1-1

lt=&lt;&lt;&lt;&lt;&lt;-


</panel_attributes><additional_attributes>10;70;460;70;460;10</additional_attributes></element><element><id>Relation</id><coordinates><x>3020</x><y>1720</y><w>300</w><h>90</h></coordinates><panel_attributes>1-1
lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>280;70;10;70;10;10</additional_attributes></element></diagram>