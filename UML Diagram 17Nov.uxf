<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>84</x>
      <y>380</y>
      <w>244</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>User
--
- email: String
- password: String
- username: String
- avatar: Avatar
- playerId: int
- blocked: boolean
--
+ login(email: String, password: String): String
+ register(email: String, password: String, username: String, avatar: Avatar)
+ updateProfile(username:String, avatar: Avatar)
+ updateProfile(username:String, avatar: Avatar, oldPassword:String, newPassword:String)
+ forgetPassword(email:String)
+ resetPassword(token:String, newPassword:String, confirmPassword:String)
+ getEmail(): String
+ getAvatar(): Avatar
+ getUsername(): String
+ blockPlayer(): void
+ unblockPlayer(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>128</x>
      <y>340</y>
      <w>56</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>The login function 
returns a token which
is a String.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>292</x>
      <y>616</y>
      <w>216</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>/Piece/
--
# pieceId: int
# alive: boolean
# playerId: String
# color: int
# belongsTo: Player
--
+ move(square: Square): void
+ getLocation(): Point
/+ getValidMoves(boardState: Square[8[[8], currentSquare: Square): List&lt;Square&gt;/
/+ renderPiece(themeColor: Color): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>304</x>
      <y>524</y>
      <w>64</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Point
--
- x: int
- y: int
--
+ setX(x: int): void
+ setY(y: int): void
+ getX(): int
+ getY(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>392</x>
      <y>688</y>
      <w>12</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>800</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Knight
--
+ Knight(color: String, player: Player): Knight
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>392</x>
      <y>724</y>
      <w>240</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;580.0;10.0;580.0;250.0;500.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>632</y>
      <w>112</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>SinglePlayerChessGame
--
- player: HumanPlayer
- computer: ComputerPlayer
- playerTurn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayerTurn(playerTurn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>400</x>
      <y>524</y>
      <w>176</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Square
--
- piece: Piece
- point: Point
--
+ Square(piece: Piece, point: Point): Square
+ setPiece(piece: Piece): void
+ getPiece(): Piece
+ renderSquare(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1008</x>
      <y>496</y>
      <w>132</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>/ChessGame/
--
# blackInCheck: boolean
# whiteInCheck: boolean
# blackCheckmated: boolean
# whiteCheckmated: boolean
--
/+ playGame(): void/
/+ addMove(move: Move): void/
+ inCheck(): boolean
+ isCheckmated(): boolean
+ isEnded(): boolean
+ promotablePawnSquare(): Square 
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/
/+ quitGame(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1092</x>
      <y>368</y>
      <w>76</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>If gameEnded is true and 
neither of blackWin or 
whiteWin is true then the 
game was drawn.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1624</x>
      <y>124</y>
      <w>124</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Computer
--
/+ checkOccupiedSquares(): void/
/+ getOccupiedSquares(): List&lt;Piece&gt;/
/+ generateMove(): Move/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1488</x>
      <y>220</y>
      <w>132</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>RookieComputer
--
- squaresOccupied: List&lt;Square&gt;
- DIFFICULTY_LEVEL: int = 0
--
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Square&gt;
+ generateMove(): Move
+ getDifficulty(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1676</x>
      <y>160</y>
      <w>12</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1296</x>
      <y>160</y>
      <w>136</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>ComputerFactory
--
+ createComputer(difficulty: int, color: int): Computer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1324</x>
      <y>112</y>
      <w>64</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Domain for difficulty:
ROOKIE = 0
INTERMEDIATE = 1
GRAND_MASTER = 2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1480</x>
      <y>116</y>
      <w>412</w>
      <h>168</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1428</x>
      <y>164</y>
      <w>60</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
creates</panel_attributes>
    <additional_attributes>130.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1624</x>
      <y>220</y>
      <w>132</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>IntermediateComputer
--
- squaresOccupied: List&lt;Square&gt;
- DIFFICULTY_LEVEL: int = 1
--
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Square&gt;
+ generateMove(): Move
+ getDifficulty(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1760</x>
      <y>220</y>
      <w>124</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>GrandMasterComputer
--
- squaresOccupied: List&lt;Square&gt;
- DIFFICULTY_LEVEL: int = 2
--
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Square&gt;
+ generateMove(): Move
+ getDifficulty(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1544</x>
      <y>188</y>
      <w>136</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>320.0;10.0;10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1672</x>
      <y>188</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;380.0;10.0;380.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>740</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Pawn
--
+ Pawn(color: String, player: Player): Pawn
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ promoteTo(pieceName: String): Piece
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>860</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Queen
--
+ Queen(color: String, player: Player): Queen
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>920</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Bishop
--
+ Bishop(color: String, player: Player): Bishop
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>980</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Rook
--
+ Rook(color: String, player: Player): Rook
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>384</x>
      <y>1044</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>King
--
+ Rook(color: String, player: Player): Rook
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>588</x>
      <y>820</y>
      <w>44</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;160.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>588</x>
      <y>880</y>
      <w>44</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;160.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>588</x>
      <y>940</y>
      <w>44</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;170.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>588</x>
      <y>1004</y>
      <w>44</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;160.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>160</x>
      <y>740</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Checker
--
+ Checker(color: String, player: Player): Checker
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ promoteTo(): Piece
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>160</x>
      <y>804</y>
      <w>208</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>KingChecker
--
+ KingChecker(color: String, player: Player): KingChecker
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1324</x>
      <y>392</y>
      <w>136</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Leaderboard
--
+ readRecordsFromDB(): void
+ saveRecordsToDB(): void
+ resetLeaderboard(): void
+ getRecords(): List&lt;LeaderboardRecord&gt;
+ sortRecords(criteria: int): void
+ getRecord(userId: String): LeaderboardRecord

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1072</x>
      <y>632</y>
      <w>120</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>MultiPlayerChessGame
--
- player1: HumanPlayer
- player2: HumanPlayer
- player1Turn: boolean
- player2Turn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayer1Turn(player1Turn: boolean): void
+ setPlayer2Turn(player2Turn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>992</x>
      <y>592</y>
      <w>84</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;40.0;10.0;40.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1064</x>
      <y>604</y>
      <w>84</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0;190.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1176</x>
      <y>364</y>
      <w>132</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>/Game/
--
# gameId: String
# board: Board
# movesMade: List&lt;Move&gt;
# result: String
# blackWin: boolean
# whiteWin: boolean
# gameEnded: boolean
# moveCounter: int
# turnMaxTime: int
--
/+ playGame(): void/
/+ addMove(move: Move): void/
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/
/+ quitGame(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1348</x>
      <y>496</y>
      <w>132</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>/CheckersGame/
--
# whiteCheckersCount: int
# blackCheckersCount: int
--
/+ playGame(): void/
/+ addMove(move: Move): void/
+ isEnded(): boolean
+ promotableCheckerSquare(): Square 
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/
/+ quitGame(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1076</x>
      <y>468</y>
      <w>164</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>390.0;10.0;390.0;50.0;10.0;50.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1228</x>
      <y>484</y>
      <w>196</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;10.0;470.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1304</x>
      <y>628</y>
      <w>112</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>SinglePlayerCheckersGame
--
- player: HumanPlayer
- computer: ComputerPlayer
- playerTurn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayerTurn(playerTurn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1424</x>
      <y>628</y>
      <w>120</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>MultiPlayerCheckersGame
--
- player1: HumanPlayer
- player2: HumanPlayer
- player1Turn: boolean
- player2Turn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayer1Turn(player1Turn: boolean): void
+ setPlayer1Turn(player2Turn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1416</x>
      <y>600</y>
      <w>84</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0;190.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1344</x>
      <y>588</y>
      <w>84</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;40.0;10.0;40.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>128</x>
      <y>724</y>
      <w>276</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>670.0;10.0;10.0;10.0;10.0;260.0;80.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>128</x>
      <y>760</y>
      <w>40</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>588</x>
      <y>764</y>
      <w>44</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1500</x>
      <y>436</y>
      <w>120</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>LeaderboardRecord
--
- userId: String
- rank: int
- wins: int
- losses: int
--
+ updateRecord(wins: int, losses: int): void
+ updateRecord(wins: int: void
+ updateRecord(losses: int): void
+ setRank(rank: int): void
+ getRank(): int
+ getWins(): int
+ getLosses(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1300</x>
      <y>0</y>
      <w>260</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>/Move/
--
- moveNumber: int
- player: Player
- pieceId: int
- fromSquare: Square
- toSquare: Square
--
+ Move(moveNumber: int, player: Player, piece: Piece, fromSquare: Square, toSquare: Square): Move
+ getPlayer(): Player
+ getFromSquare(): Square
+ getToSquare(): Square
+ getPieceId(): int
+ getMoveNumber(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1456</x>
      <y>412</y>
      <w>116</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=n
- records {ordered, unique}</panel_attributes>
    <additional_attributes>10.0;20.0;260.0;20.0;260.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>628</x>
      <y>280</y>
      <w>60</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Board
--
/+ renderBoard(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>428</x>
      <y>448</y>
      <w>124</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>UnstyledBoard
--
- boardState: Square[8][8]
--
+ initializeBoard(): void
+ renderBoard(): void
+ getSquareOnClick(e: MouseEvent): Square
+ getBoardState(): Square[8][8]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>712</x>
      <y>364</y>
      <w>60</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>/BoardDecorator/
--
# board: Board
--
+ renderBoard(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>604</x>
      <y>444</y>
      <w>132</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>BoardTheme1
--
- LIGHT_COLOR: Color
- DARK_COLOR: Color
--
+ BoardTheme1(board: Board): BoardTheme1
+ paintTheme(): void
+ renderBoard(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>744</x>
      <y>444</y>
      <w>132</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>BoardTheme2
--
- LIGHT_COLOR: Color
- DARK_COLOR: Color
--
+ BoardTheme2(board: Board): BoardTheme2
+ paintTheme(): void
+ renderBoard(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>304</y>
      <w>192</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>460.0;10.0;460.0;90.0;10.0;90.0;10.0;360.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>648</x>
      <y>336</y>
      <w>96</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;10.0;220.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>664</x>
      <y>392</y>
      <w>84</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;90.0;10.0;90.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>732</x>
      <y>424</y>
      <w>88</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;10.0;200.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>548</x>
      <y>376</y>
      <w>172</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
styles</panel_attributes>
    <additional_attributes>10.0;250.0;100.0;250.0;100.0;10.0;410.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>772</x>
      <y>288</y>
      <w>124</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>The renderBoard method renders each
square of the board and the piece on a square 
if any. It involves the usage of both the 
renderSquare and renderPiece methods. The 
coloring of the square and the piece is done 
according to the theme. So the themed 
rendering is handled for both the pieces and the
board.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>668</x>
      <y>512</y>
      <w>80</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Color
--
- red: float
- blue: float
- green: float
--
+ setRed(red: float): void
+ setBlue(blue: float): void
+ setGreen(green: float): void
+ getRed(): float
+ getBlue(): float
+ getGreen(): float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>588</y>
      <w>212</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;170.0;510.0;170.0;510.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>968</x>
      <y>108</y>
      <w>156</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>Menu
--
- chessSelected: boolean
- singlePlayerSelected: boolean
- rookieDifficultySelected: boolean
- intermediateDifficultySelected: boolean
- chessLeaderboard: Leaderboard
- checkersLeaderboard: Leaderboard
- replayList: ReplayList
- usersList: UserList
- replayToPlay: Replay
- viewLeaderboards: boolean
- viewReplaysList: boolean
--
+ renderMenu(): void
+ closeMenu(): void
+ selectChess(): void
+ selectCheckers(): void
+ selectMultiplayer(): void
+ selectSingleplayer(): void
+ createGame(): Game
+ showLeaderboard(): void
+ showUsersList(): void
+ showReplays(currentUser: User): void
+ showPlayReplay(): void
+ showProfile(currentUser: User): void
+ showEditProfile(currentUser: User): void
+ showSignupForm(): void
+ showLoginForm(): void
+ submitLoginFormDetails(): void
+ submitSignupFormDetails(): void
+ submitEditProfileDetails(): void
+ exitApp(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1120</x>
      <y>164</y>
      <w>184</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;20.0;440.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>152</y>
      <w>60</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Main
--
- mainMenu: Menu
- currentUser: User
--
+ main(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>324</x>
      <y>408</y>
      <w>48</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>364</x>
      <y>376</y>
      <w>92</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>AuthGuard
--
- token: String
--
+ AuthGuard(token:String)
+ isAuthenticated() : boolean
+ isAuthorized() : boolean
+ isPlayer() : boolean
+ isAdmin() : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>408</y>
      <w>76</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>Roles are Player and 
Admin
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>732</y>
      <w>80</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>Connection
--
- connectionId: string
- player1IP: String
- player2IP: String
- connectionOn: boolean
--
- Connection(): Connection
- connectionStatus(): boolean
- terminateConnection(): void
- updateStatus() : void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1252</x>
      <y>836</y>
      <w>104</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Lobby
--
- usersQueue: Queue&lt;User&gt;
--
+ matchUp(): MatchUp</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1292</x>
      <y>796</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
uses</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1332</x>
      <y>704</y>
      <w>160</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
m1=1
m2=1
- connection

</panel_attributes>
    <additional_attributes>10.0;180.0;370.0;180.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1104</x>
      <y>708</y>
      <w>160</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
m1=1
m2=1
- connection</panel_attributes>
    <additional_attributes>380.0;170.0;10.0;170.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>972</x>
      <y>328</y>
      <w>76</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>/Player/
--
# isBlack: boolean
--
+ isPlayerBlack(): boolean
+ isPlayerWhite(): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>892</x>
      <y>408</y>
      <w>120</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>HumanPlayer
--
- user: User
- selectedSquare: Square
- destinationSquare: Square
--
+ getPlayerUsername(): String
+ getPlayerId(): String
+ setSelectedSquare(square: Square): void
+ getSelectedSquare(): Square
+ setDestinationSquare(square: Square): void
+ getDestinationSquare(): Square</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1032</x>
      <y>408</y>
      <w>96</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>ComputerPlayer
--
- computer: Computer
--
+ getComputer(): Computer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>944</x>
      <y>384</y>
      <w>72</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;40.0;10.0;40.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1004</x>
      <y>396</y>
      <w>60</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0;130.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1428</x>
      <y>292</y>
      <w>116</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>Replay
--
- gameId: String
- player1: Player
- player2: Player
- player1Won: boolean
- player2Won: boolean
- gameMoves: List&lt;Moves&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>472</x>
      <y>576</y>
      <w>12</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>244</x>
      <y>292</y>
      <w>116</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Avatar
--
- avatarURL: String
--
+ getAvatarURL(): String
+ getAvatarURL(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>948</x>
      <y>20</y>
      <w>84</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>UserList
--
- users: List&lt;User&gt;
- selectedUser: User
--
+ loadUsersFromDB(): void
+ blockSelectedUser(): void
+ deleteSelectedUser(): void
+ selectUser(user: User): void
+ getUserList(): List&lt;User&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1044</x>
      <y>40</y>
      <w>192</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>ReplayList
--
- replays: List&lt;Replay&gt;
--
+ loadReplaysFromDB(currentUser: User, chessReplays: boolean): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1264</x>
      <y>288</y>
      <w>116</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>ReplayPlayer
--
- moveNumber: int
- board: Board
--
+ playReplay(): void
+ getMoveNumber(): int
+ playFromMove(moveNumber: int): void
+ nextMove(): void
+ lastMove(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1120</x>
      <y>300</y>
      <w>152</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;20.0;360.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1376</x>
      <y>316</y>
      <w>60</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
- replay
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1124</x>
      <y>820</y>
      <w>84</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>MatchUp
--
- player1: HumanPlayer
- player2: HumanPlayer
- connection: Connection
--
+ getPlayer1(): HumanPlayer
+ getPlayer2(): HumanPlayer
+ getConnection(): Connection
+ createGame(): Game</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>504</x>
      <y>228</y>
      <w>68</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>AvatarSelector
--
+ loadAvatars(): void
+ selectAvatar(): Avatar</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>288</x>
      <y>244</y>
      <w>224</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=n
avatars</panel_attributes>
    <additional_attributes>540.0;20.0;10.0;20.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>568</x>
      <y>240</y>
      <w>408</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>10.0;20.0;1000.0;20.0</additional_attributes>
  </element>
</diagram>
