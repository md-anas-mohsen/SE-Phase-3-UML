<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>147</x>
      <y>665</y>
      <w>427</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>User
--
- email: String
- password: String
- username: String
- avatar: Avatar
- playerId: int
- blocked: boolean
--
+ login(email: String, password: String): String
+ register(email: String, password: String, username: String, avatar: Avatar)
+ updateProfile(username:String, avatar: Avatar)
+ updateProfile(username:String, avatar: Avatar, oldPassword:String, newPassword:String)
+ forgetPassword(email:String)
+ resetPassword(token:String, newPassword:String, confirmPassword:String)
+ getEmail(): String
+ getAvatar(): Avatar
+ getUsername(): String
+ blockPlayer(): void
+ unblockPlayer(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>224</x>
      <y>595</y>
      <w>98</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>The login function 
returns a token which
is a String.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>511</x>
      <y>1078</y>
      <w>378</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>/Piece/
--
# pieceId: int
# alive: boolean
# playerId: String
# color: int
# belongsTo: Player
--
+ move(square: Square): void
+ getLocation(): Point
/+ getValidMoves(boardState: Square[8[[8], currentSquare: Square): List&lt;Square&gt;/
/+ renderPiece(themeColor: Color): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>532</x>
      <y>917</y>
      <w>112</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>Point
--
- x: int
- y: int
--
+ setX(x: int): void
+ setY(y: int): void
+ getX(): int
+ getY(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>686</x>
      <y>1204</y>
      <w>21</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1400</y>
      <w>364</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Knight
--
+ Knight(color: String, player: Player): Knight
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>686</x>
      <y>1267</y>
      <w>420</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;580.0;10.0;580.0;250.0;500.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1666</x>
      <y>1106</y>
      <w>196</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>SinglePlayerChessGame
--
- player: HumanPlayer
- computer: ComputerPlayer
- playerTurn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayerTurn(playerTurn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>700</x>
      <y>917</y>
      <w>308</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>Square
--
- piece: Piece
- point: Point
--
+ Square(piece: Piece, point: Point): Square
+ setPiece(piece: Piece): void
+ getPiece(): Piece
+ renderSquare(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1764</x>
      <y>868</y>
      <w>231</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>/ChessGame/
--
# blackInCheck: boolean
# whiteInCheck: boolean
# blackCheckmated: boolean
# whiteCheckmated: boolean
--
/+ playGame(): void/
/+ addMove(move: Move): void/
+ inCheck(): boolean
+ isCheckmated(): boolean
+ isEnded(): boolean
+ promotablePawnSquare(): Square 
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/
/+ quitGame(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1911</x>
      <y>644</y>
      <w>133</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>If gameEnded is true and 
neither of blackWin or 
whiteWin is true then the 
game was drawn.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3003</x>
      <y>217</y>
      <w>217</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Computer
--
/+ checkOccupiedSquares(): void/
/+ getOccupiedSquares(): List&lt;Piece&gt;/
/+ generateMove(): Move/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2765</x>
      <y>385</y>
      <w>231</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>RookieComputer
--
- squaresOccupied: List&lt;Square&gt;
- DIFFICULTY_LEVEL: int = 0
--
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Square&gt;
+ generateMove(): Move
+ getDifficulty(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3094</x>
      <y>280</y>
      <w>21</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2268</x>
      <y>280</y>
      <w>238</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>ComputerFactory
--
+ createComputer(difficulty: int, color: int): Computer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2317</x>
      <y>196</y>
      <w>112</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Domain for difficulty:
ROOKIE = 0
INTERMEDIATE = 1
GRAND_MASTER = 2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2751</x>
      <y>203</y>
      <w>721</w>
      <h>294</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2499</x>
      <y>287</y>
      <w>266</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
creates</panel_attributes>
    <additional_attributes>360.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3003</x>
      <y>385</y>
      <w>231</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>IntermediateComputer
--
- squaresOccupied: List&lt;Square&gt;
- DIFFICULTY_LEVEL: int = 1
--
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Square&gt;
+ generateMove(): Move
+ getDifficulty(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3241</x>
      <y>385</y>
      <w>217</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>GrandMasterComputer
--
- squaresOccupied: List&lt;Square&gt;
- DIFFICULTY_LEVEL: int = 2
--
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Square&gt;
+ generateMove(): Move
+ getDifficulty(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2863</x>
      <y>329</y>
      <w>238</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>320.0;10.0;10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3087</x>
      <y>329</y>
      <w>280</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;380.0;10.0;380.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1295</y>
      <w>364</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Pawn
--
+ Pawn(color: String, player: Player): Pawn
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ promoteTo(pieceName: String): Piece
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1505</y>
      <w>364</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Queen
--
+ Queen(color: String, player: Player): Queen
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1610</y>
      <w>364</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Bishop
--
+ Bishop(color: String, player: Player): Bishop
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1715</y>
      <w>364</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Rook
--
+ Rook(color: String, player: Player): Rook
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1827</y>
      <w>364</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>King
--
+ Rook(color: String, player: Player): Rook
+ getValidMoves(boardState: Square[8][8], onSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1029</x>
      <y>1435</y>
      <w>77</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;160.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1029</x>
      <y>1540</y>
      <w>77</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;160.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1029</x>
      <y>1645</y>
      <w>77</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;170.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1029</x>
      <y>1757</y>
      <w>77</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;90.0;160.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1295</y>
      <w>364</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Checker
--
+ Checker(color: String, player: Player): Checker
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ promoteTo(): Piece
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>280</x>
      <y>1407</y>
      <w>364</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>KingChecker
--
+ KingChecker(color: String, player: Player): KingChecker
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2317</x>
      <y>686</y>
      <w>238</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>Leaderboard
--
+ readRecordsFromDB(): void
+ saveRecordsToDB(): void
+ resetLeaderboard(): void
+ getRecords(): List&lt;LeaderboardRecord&gt;
+ sortRecords(criteria: int): void
+ getRecord(userId: String): LeaderboardRecord

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1876</x>
      <y>1106</y>
      <w>210</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>MultiPlayerChessGame
--
- player1: HumanPlayer
- player2: HumanPlayer
- player1Turn: boolean
- player2Turn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayer1Turn(player1Turn: boolean): void
+ setPlayer2Turn(player2Turn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1736</x>
      <y>1036</y>
      <w>147</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;40.0;10.0;40.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1862</x>
      <y>1057</y>
      <w>147</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0;190.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2058</x>
      <y>637</y>
      <w>231</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>/Game/
--
# gameId: String
# board: Board
# movesMade: List&lt;Move&gt;
# result: String
# blackWin: boolean
# whiteWin: boolean
# gameEnded: boolean
# moveCounter: int
# turnMaxTime: int
--
/+ playGame(): void/
/+ addMove(move: Move): void/
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/
/+ quitGame(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2359</x>
      <y>868</y>
      <w>231</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>/CheckersGame/
--
# whiteCheckersCount: int
# blackCheckersCount: int
--
/+ playGame(): void/
/+ addMove(move: Move): void/
+ isEnded(): boolean
+ promotableCheckerSquare(): Square 
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/
/+ quitGame(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1883</x>
      <y>819</y>
      <w>287</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>390.0;10.0;390.0;50.0;10.0;50.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2149</x>
      <y>847</y>
      <w>343</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;10.0;470.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2282</x>
      <y>1099</y>
      <w>196</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>SinglePlayerCheckersGame
--
- player: HumanPlayer
- computer: ComputerPlayer
- playerTurn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayerTurn(playerTurn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2492</x>
      <y>1099</y>
      <w>210</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>MultiPlayerCheckersGame
--
- player1: HumanPlayer
- player2: HumanPlayer
- player1Turn: boolean
- player2Turn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayer1Turn(player1Turn: boolean): void
+ setPlayer1Turn(player2Turn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2478</x>
      <y>1050</y>
      <w>147</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0;190.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2352</x>
      <y>1029</y>
      <w>147</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;40.0;10.0;40.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>224</x>
      <y>1267</y>
      <w>483</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>670.0;10.0;10.0;10.0;10.0;260.0;80.0;260.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>224</x>
      <y>1330</y>
      <w>70</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1029</x>
      <y>1337</y>
      <w>77</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2625</x>
      <y>763</y>
      <w>210</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>LeaderboardRecord
--
- userId: String
- rank: int
- wins: int
- losses: int
--
+ updateRecord(wins: int, losses: int): void
+ updateRecord(wins: int: void
+ updateRecord(losses: int): void
+ setRank(rank: int): void
+ getRank(): int
+ getWins(): int
+ getLosses(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2275</x>
      <y>0</y>
      <w>455</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>/Move/
--
- moveNumber: int
- player: Player
- pieceId: int
- fromSquare: Square
- toSquare: Square
--
+ Move(moveNumber: int, player: Player, piece: Piece, fromSquare: Square, toSquare: Square): Move
+ getPlayer(): Player
+ getFromSquare(): Square
+ getToSquare(): Square
+ getPieceId(): int
+ getMoveNumber(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2548</x>
      <y>721</y>
      <w>203</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=n
- records {ordered, unique}</panel_attributes>
    <additional_attributes>10.0;20.0;260.0;20.0;260.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1099</x>
      <y>490</y>
      <w>105</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Board
--
/+ renderBoard(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>749</x>
      <y>784</y>
      <w>217</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>UnstyledBoard
--
- boardState: Square[8][8]
--
+ initializeBoard(): void
+ renderBoard(): void
+ getSquareOnClick(e: MouseEvent): Square
+ getBoardState(): Square[8][8]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1246</x>
      <y>637</y>
      <w>105</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>/BoardDecorator/
--
# board: Board
--
+ renderBoard(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1057</x>
      <y>777</y>
      <w>231</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>BoardTheme1
--
- LIGHT_COLOR: Color
- DARK_COLOR: Color
--
+ BoardTheme1(board: Board): BoardTheme1
+ paintTheme(): void
+ renderBoard(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1302</x>
      <y>777</y>
      <w>231</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>BoardTheme2
--
- LIGHT_COLOR: Color
- DARK_COLOR: Color
--
+ BoardTheme2(board: Board): BoardTheme2
+ paintTheme(): void
+ renderBoard(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>826</x>
      <y>532</y>
      <w>336</w>
      <h>266</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>460.0;10.0;460.0;90.0;10.0;90.0;10.0;360.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1134</x>
      <y>588</y>
      <w>168</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;10.0;220.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1162</x>
      <y>686</y>
      <w>147</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;90.0;10.0;90.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1281</x>
      <y>742</y>
      <w>154</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;10.0;200.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>959</x>
      <y>658</y>
      <w>301</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
styles</panel_attributes>
    <additional_attributes>10.0;250.0;100.0;250.0;100.0;10.0;410.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1351</x>
      <y>504</y>
      <w>217</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>The renderBoard method renders each
square of the board and the piece on a square 
if any. It involves the usage of both the 
renderSquare and renderPiece methods. The 
coloring of the square and the piece is done 
according to the theme. So the themed 
rendering is handled for both the pieces and the
board.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1169</x>
      <y>896</y>
      <w>140</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Color
--
- red: float
- blue: float
- green: float
--
+ setRed(red: float): void
+ setBlue(blue: float): void
+ setGreen(green: float): void
+ getRed(): float
+ getBlue(): float
+ getGreen(): float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>882</x>
      <y>1029</y>
      <w>371</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;170.0;510.0;170.0;510.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1694</x>
      <y>189</y>
      <w>273</w>
      <h>364</h>
    </coordinates>
    <panel_attributes>Menu
--
- chessSelected: boolean
- singlePlayerSelected: boolean
- rookieDifficultySelected: boolean
- intermediateDifficultySelected: boolean
- chessLeaderboard: Leaderboard
- checkersLeaderboard: Leaderboard
- replayList: ReplayList
- usersList: UserList
- replayToPlay: Replay
- viewLeaderboards: boolean
- viewReplaysList: boolean
--
+ renderMenu(): void
+ closeMenu(): void
+ selectChess(): void
+ selectCheckers(): void
+ selectMultiplayer(): void
+ selectSingleplayer(): void
+ createGame(): Game
+ showLeaderboard(): void
+ showUsersList(): void
+ showReplays(currentUser: User): void
+ showPlayReplay(): void
+ showProfile(currentUser: User): void
+ showEditProfile(currentUser: User): void
+ showSignupForm(): void
+ showLoginForm(): void
+ submitLoginFormDetails(): void
+ submitSignupFormDetails(): void
+ submitEditProfileDetails(): void
+ exitApp(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1960</x>
      <y>287</y>
      <w>322</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;20.0;440.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1512</x>
      <y>266</y>
      <w>119</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Main
--
- mainMenu: Menu
- currentUser: User
--
+ main(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>567</x>
      <y>714</y>
      <w>84</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>637</x>
      <y>658</y>
      <w>161</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>AuthGuard
--
- token: String
--
+ AuthGuard(token:String)
+ isAuthenticated() : boolean
+ isAuthorized() : boolean
+ isPlayer() : boolean
+ isAdmin() : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>714</y>
      <w>133</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>Roles are Player and 
Admin
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2198</x>
      <y>1281</y>
      <w>140</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>Connection
--
- connectionId: string
- player1IP: String
- player2IP: String
- connectionOn: boolean
--
- Connection(): Connection
- connectionStatus(): boolean
- terminateConnection(): void
- updateStatus() : void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2191</x>
      <y>1463</y>
      <w>182</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>Lobby
--
- usersQueue: Queue&lt;User&gt;
--
+ matchUp(): MatchUp</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2261</x>
      <y>1393</y>
      <w>21</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2331</x>
      <y>1232</y>
      <w>280</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
m1=1
m2=1
- connection

</panel_attributes>
    <additional_attributes>10.0;180.0;370.0;180.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1932</x>
      <y>1239</y>
      <w>280</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
m1=1
m2=1
- connection</panel_attributes>
    <additional_attributes>380.0;170.0;10.0;170.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1701</x>
      <y>574</y>
      <w>133</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>/Player/
--
# isBlack: boolean
--
+ isPlayerBlack(): boolean
+ isPlayerWhite(): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1561</x>
      <y>714</y>
      <w>210</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>HumanPlayer
--
- user: User
- selectedSquare: Square
- destinationSquare: Square
--
+ getPlayerUsername(): String
+ getPlayerId(): String
+ setSelectedSquare(square: Square): void
+ getSelectedSquare(): Square
+ setDestinationSquare(square: Square): void
+ getDestinationSquare(): Square</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1806</x>
      <y>714</y>
      <w>168</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>ComputerPlayer
--
- computer: Computer
--
+ getComputer(): Computer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1652</x>
      <y>672</y>
      <w>126</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;160.0;40.0;10.0;40.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1757</x>
      <y>693</y>
      <w>105</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;130.0;10.0;130.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2527</x>
      <y>511</y>
      <w>203</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>Replay
--
- gameId: String
- player1: Player
- player2: Player
- player1Won: boolean
- player2Won: boolean
- gameMoves: List&lt;Moves&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>826</x>
      <y>1008</y>
      <w>21</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>427</x>
      <y>511</y>
      <w>203</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>Avatar
--
- avatarURL: String
--
+ getAvatarURL(): String
+ getAvatarURL(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1659</x>
      <y>35</y>
      <w>147</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>UserList
--
- users: List&lt;User&gt;
- selectedUser: User
--
+ loadUsersFromDB(): void
+ blockSelectedUser(): void
+ deleteSelectedUser(): void
+ selectUser(user: User): void
+ getUserList(): List&lt;User&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1827</x>
      <y>70</y>
      <w>336</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>ReplayList
--
- replays: List&lt;Replay&gt;
--
+ loadReplaysFromDB(currentUser: User, chessReplays: boolean): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2212</x>
      <y>504</y>
      <w>203</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>ReplayPlayer
--
- moveNumber: int
- board: Board
--
+ playReplay(): void
+ getMoveNumber(): int
+ playFromMove(moveNumber: int): void
+ nextMove(): void
+ lastMove(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1960</x>
      <y>525</y>
      <w>266</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;20.0;360.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2408</x>
      <y>553</y>
      <w>133</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
- replay
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1967</x>
      <y>1435</y>
      <w>147</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>MatchUp
--
- player1: HumanPlayer
- player2: HumanPlayer
- connection: Connection
--
+ getPlayer1(): HumanPlayer
+ getPlayer2(): HumanPlayer
+ getConnection(): Connection
+ createGame(): Game</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>882</x>
      <y>399</y>
      <w>119</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>AvatarSelector
--
+ loadAvatars(): void
+ selectAvatar(): Avatar</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>427</y>
      <w>392</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=n
avatars</panel_attributes>
    <additional_attributes>540.0;20.0;10.0;20.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>994</x>
      <y>420</y>
      <w>714</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>10.0;20.0;1000.0;20.0</additional_attributes>
  </element>
</diagram>
