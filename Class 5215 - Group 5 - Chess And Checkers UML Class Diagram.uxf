<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>906</x>
      <y>612</y>
      <w>366</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>User
--
- email: String
- password: String
- username: String
- avatar: Avatar
- playerId: int
- blocked: boolean
--
+ login(email: String, password: String): String
+ register(email: String, password: String, username: String): String
+ updateProfile(username:String): void
+ updateAvatar(avatar: Avatar): void
+ updateProfile(username:String, avatar: Avatar, oldPassword:String, newPassword:String)
+ forgetPassword(email:String)
+ resetPassword(token:String, newPassword:String, confirmPassword:String)
+ getEmail(): String
+ getAvatar(): Avatar
+ getUsername(): String
+ blockPlayer(): void
+ unblockPlayer(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>972</x>
      <y>552</y>
      <w>84</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>The login function 
returns a token which
is a String.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1218</x>
      <y>1212</y>
      <w>324</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>/Piece/
--
# pieceId: int
# alive: boolean
# belongsTo: Player
--
+ move(square: Square): void
+ getLocation(): Point
/+ getValidMoves(boardState: Square[8[[8], currentSquare: Square): List&lt;Square&gt;/
/+ renderPiece(themeColor: Color): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1236</x>
      <y>828</y>
      <w>96</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>Point
--
- x: int
- y: int
--
+ setX(x: int): void
+ setY(y: int): void
+ getX(): int
+ getY(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1368</x>
      <y>1308</y>
      <w>18</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;260.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1044</x>
      <y>1542</y>
      <w>312</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Knight
--
+ Knight(color: String, player: Player): Knight
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2550</x>
      <y>1002</y>
      <w>168</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>SinglePlayerChessGame
--
- player: HumanPlayer
- computer: ComputerPlayer
- playerTurn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayerTurn(playerTurn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1380</x>
      <y>942</y>
      <w>264</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Square
--
- piece: Piece
- point: Point
--
+ Square(piece: Piece, point: Point): Square
+ setPiece(piece: Piece): void
+ getPiece(): Piece
+ renderSquare(): void
+ getLocation(): Point</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2634</x>
      <y>798</y>
      <w>198</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>/ChessGame/
--
# darkInCheck: boolean
# lightInCheck: boolean
# darkCheckmated: boolean
# lightCheckmated: boolean
--
/+ playGame(): void/
/+ addMove(move: Move): void/
+ inCheck(): boolean
+ isCheckmated(): boolean
+ isEnded(): boolean
+ promotablePawnSquare(): Square 
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/
/+ quitGame(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2760</x>
      <y>606</y>
      <w>114</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>If gameEnded is true and 
neither of blackWin or 
whiteWin is true then the 
game was drawn.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3216</x>
      <y>228</y>
      <w>186</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Computer
--
/+ checkOccupiedSquares(): void/
/+ getOccupiedSquares(): List&lt;Piece&gt;/
/+ generateMove(): Move/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3012</x>
      <y>372</y>
      <w>198</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>RookieComputer
--
- squaresOccupied: List&lt;Square&gt;
- DIFFICULTY_LEVEL: int = 0
--
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Square&gt;
+ generateMove(): Move
+ getDifficulty(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3294</x>
      <y>282</y>
      <w>18</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2724</x>
      <y>282</y>
      <w>204</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>ComputerFactory
--
+ createComputer(difficulty: int, color: int): Computer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2766</x>
      <y>222</y>
      <w>96</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Domain for difficulty:
ROOKIE = 0
INTERMEDIATE = 1
GRAND_MASTER = 2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3000</x>
      <y>216</y>
      <w>618</w>
      <h>252</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2922</x>
      <y>288</y>
      <w>90</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
creates</panel_attributes>
    <additional_attributes>130.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3216</x>
      <y>372</y>
      <w>198</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>IntermediateComputer
--
- squaresOccupied: List&lt;Square&gt;
- DIFFICULTY_LEVEL: int = 1
--
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Square&gt;
+ generateMove(): Move
+ getDifficulty(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3420</x>
      <y>372</y>
      <w>186</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>GrandMasterComputer
--
- squaresOccupied: List&lt;Square&gt;
- DIFFICULTY_LEVEL: int = 2
--
+ checkOccupiedSquares(): void
+ getOccupiedSquares(): List&lt;Square&gt;
+ generateMove(): Move
+ getDifficulty(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3096</x>
      <y>324</y>
      <w>204</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>320.0;10.0;10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3288</x>
      <y>324</y>
      <w>240</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;380.0;10.0;380.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>696</x>
      <y>1542</y>
      <w>312</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Pawn
--
+ Pawn(color: String, player: Player): Pawn
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ promoteTo(pieceName: String): Piece
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1392</x>
      <y>1542</y>
      <w>312</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Queen
--
+ Queen(color: String, player: Player): Queen
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1740</x>
      <y>1542</y>
      <w>312</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Bishop
--
+ Bishop(color: String, player: Player): Bishop
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2094</x>
      <y>1542</y>
      <w>312</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Rook
--
+ Rook(color: String, player: Player): Rook
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2448</x>
      <y>1542</y>
      <w>312</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>King
--
+ Rook(color: String, player: Player): Rook
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>348</x>
      <y>1542</y>
      <w>312</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Checker
--
+ Checker(color: String, player: Player): Checker
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ promoteTo(): Piece
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1542</y>
      <w>312</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>KingChecker
--
+ KingChecker(color: String, player: Player): KingChecker
+ getValidMoves(boardState: Square[8][8], currentSquare: Square): List&lt;Square&gt;
+ renderPiece(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3114</x>
      <y>540</y>
      <w>204</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Leaderboard
--
+ readRecordsFromDB(): void
+ saveRecordsToDB(): void
+ resetLeaderboard(): void
+ getRecords(): List&lt;LeaderboardRecord&gt;
+ sortRecords(criteria: int): void
+ getRecord(userId: String): LeaderboardRecord

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2730</x>
      <y>1002</y>
      <w>180</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>MultiPlayerChessGame
--
- player1: HumanPlayer
- player2: HumanPlayer
- player1Turn: boolean
- player2Turn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayer1Turn(player1Turn: boolean): void
+ setPlayer2Turn(player2Turn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2610</x>
      <y>942</y>
      <w>126</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;40.0;10.0;40.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2718</x>
      <y>960</y>
      <w>126</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0;190.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2886</x>
      <y>600</y>
      <w>198</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>/Game/
--
# gameId: String
# board: Board
# movesMade: List&lt;Move&gt;
# result: String
# darkWin: boolean
# lightWin: boolean
# gameEnded: boolean
# moveCounter: int
# turnMaxTime: int
--
/+ playGame(): void/
/+ addMove(move: Move): void/
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/
/+ quitGame(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3144</x>
      <y>798</y>
      <w>198</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>/CheckersGame/
--
# lightCheckersCount: int
# darkCheckersCount: int
--
/+ playGame(): void/
/+ addMove(move: Move): void/
+ isEnded(): boolean
+ promotableCheckerSquare(): Square 
/+ saveReplay(): Replay/
/+ updateLeaderboard(): Leaderboard/
/+ quitGame(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2736</x>
      <y>756</y>
      <w>246</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>390.0;10.0;390.0;50.0;10.0;50.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2964</x>
      <y>780</y>
      <w>294</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;470.0;10.0;470.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3078</x>
      <y>996</y>
      <w>168</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>SinglePlayerCheckersGame
--
- player: HumanPlayer
- computer: ComputerPlayer
- playerTurn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayerTurn(playerTurn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3258</x>
      <y>996</y>
      <w>180</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>MultiPlayerCheckersGame
--
- player1: HumanPlayer
- player2: HumanPlayer
- player1Turn: boolean
- player2Turn: boolean
--
+ playGame(): void
+ saveReplay(): void
+ updateLeaderboard(): void
+ setPlayer1Turn(player1Turn: boolean): void
+ setPlayer1Turn(player2Turn: boolean): void
+ quitGame(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3246</x>
      <y>954</y>
      <w>126</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0;190.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3138</x>
      <y>936</y>
      <w>126</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;40.0;10.0;40.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3360</x>
      <y>630</y>
      <w>180</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>LeaderboardRecord
--
- userId: String
- rank: int
- wins: int
- losses: int
--
+ updateRecord(wins: int, losses: int): void
+ updateRecord(wins: int: void
+ updateRecord(losses: int): void
+ setRank(rank: int): void
+ getRank(): int
+ getWins(): int
+ getLosses(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2694</x>
      <y>42</y>
      <w>390</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>Move
--
- moveNumber: int
- player: Player
- pieceId: int
- fromSquare: Square
- toSquare: Square
--
+ Move(moveNumber: int, player: Player, piece: Piece, fromSquare: Square, toSquare: Square): Move
+ getPlayer(): Player
+ getFromSquare(): Square
+ getToSquare(): Square
+ getPieceId(): int
+ getMoveNumber(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3312</x>
      <y>582</y>
      <w>150</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=n
- records {ordered, unique}</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0;220.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1722</x>
      <y>462</y>
      <w>90</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Board
--
/+ renderBoard(): void/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1422</x>
      <y>714</y>
      <w>186</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>UnstyledBoard
--
- boardState: Square[8][8]
--
+ initializeBoard(): void
+ renderBoard(): void
+ getSquareOnClick(e: MouseEvent): Square
+ getBoardState(): Square[8][8]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1848</x>
      <y>588</y>
      <w>90</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>/BoardDecorator/
--
# board: Board
--
+ renderBoard(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1686</x>
      <y>708</y>
      <w>198</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>BoardTheme1
--
- LIGHT_COLOR: Color
- DARK_COLOR: Color
--
+ BoardTheme1(board: Board): BoardTheme1
+ paintTheme(): void
+ renderBoard(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1896</x>
      <y>708</y>
      <w>198</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>BoardTheme2
--
- LIGHT_COLOR: Color
- DARK_COLOR: Color
--
+ BoardTheme2(board: Board): BoardTheme2
+ paintTheme(): void
+ renderBoard(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1488</x>
      <y>498</y>
      <w>288</w>
      <h>228</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>460.0;10.0;460.0;90.0;10.0;90.0;10.0;360.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1752</x>
      <y>546</y>
      <w>144</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;10.0;220.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1776</x>
      <y>630</y>
      <w>126</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>190.0;10.0;190.0;90.0;10.0;90.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1878</x>
      <y>678</y>
      <w>132</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;10.0;200.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1602</x>
      <y>606</y>
      <w>258</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
styles</panel_attributes>
    <additional_attributes>10.0;250.0;100.0;250.0;100.0;10.0;410.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1938</x>
      <y>474</y>
      <w>186</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>The renderBoard method renders each
square of the board and the piece on a square 
if any. It involves the usage of both the 
renderSquare and renderPiece methods. The 
coloring of the square and the piece is done 
according to the theme. So the themed 
rendering is handled for both the pieces and the
board.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1782</x>
      <y>822</y>
      <w>120</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Color
--
- red: float
- blue: float
- green: float
--
+ setRed(red: float): void
+ setBlue(blue: float): void
+ setGreen(green: float): void
+ getRed(): float
+ getBlue(): float
+ getGreen(): float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1536</x>
      <y>936</y>
      <w>318</w>
      <h>348</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;560.0;510.0;560.0;510.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2232</x>
      <y>204</y>
      <w>234</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>Menu
--
- chessSelected: boolean
- singlePlayerSelected: boolean
- rookieDifficultySelected: boolean
- intermediateDifficultySelected: boolean
- chessLeaderboard: Leaderboard
- checkersLeaderboard: Leaderboard
- replayList: ReplayList
- usersList: UserList
- replayToPlay: Replay
- viewLeaderboards: boolean
- viewReplaysList: boolean
--
+ renderMenu(): void
+ closeMenu(): void
+ selectChess(): void
+ selectCheckers(): void
+ selectMultiplayer(): void
+ selectSingleplayer(): void
+ createGame(): Game
+ showLeaderboard(): void
+ showUsersList(): void
+ showReplays(currentUser: User): void
+ showPlayReplay(): void
+ showProfile(currentUser: User): void
+ showEditProfile(currentUser: User): void
+ showSignupForm(): void
+ showLoginForm(): void
+ submitLoginFormDetails(): void
+ submitSignupFormDetails(): void
+ submitEditProfileDetails(): void
+ exitApp(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2460</x>
      <y>288</y>
      <w>276</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;20.0;440.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2076</x>
      <y>270</y>
      <w>90</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Main
--
- mainMenu: Menu
- currentUser: User
--
+ main(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1266</x>
      <y>654</y>
      <w>72</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;..</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1326</x>
      <y>606</y>
      <w>138</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>AuthGuard
--
- token: String
--
+ AuthGuard(token:String)
+ isAuthenticated() : boolean
+ isAuthorized() : boolean
+ isPlayer() : boolean
+ isAdmin() : boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>780</x>
      <y>654</y>
      <w>114</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>Roles are Player and 
Admin
bg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3006</x>
      <y>1152</y>
      <w>120</w>
      <h>102</h>
    </coordinates>
    <panel_attributes>Connection
--
- connectionId: string
- player1IP: String
- player2IP: String
- connectionOn: boolean
--
- Connection(): Connection
- connectionStatus(): boolean
- terminateConnection(): void
- updateStatus() : void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3000</x>
      <y>1314</y>
      <w>156</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Lobby
--
- usersQueue: Queue&lt;User&gt;
--
+ matchUp(): MatchUp</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3060</x>
      <y>1248</y>
      <w>36</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
uses</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3120</x>
      <y>1110</y>
      <w>240</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
m1=1
m2=1
- connection

</panel_attributes>
    <additional_attributes>10.0;180.0;370.0;180.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2778</x>
      <y>1116</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;&gt;
m1=1
m2=1
- connection</panel_attributes>
    <additional_attributes>380.0;170.0;10.0;170.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2352</x>
      <y>552</y>
      <w>114</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/Player/
--
# isDark: boolean
--
+ isPlayerDark(): boolean
+ isPlayerLight(): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2184</x>
      <y>672</y>
      <w>234</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>HumanPlayer
--
- user: User
- selectedSquare: Square
- destinationSquare: Square
--
+ HumanPlayer(user: User, isDark: boolean): HumanPlayer
+ getPlayerUsername(): String
+ getPlayerId(): String
+ setSelectedSquare(square: Square): void
+ getSelectedSquare(): Square
+ setDestinationSquare(square: Square): void
+ getDestinationSquare(): Square</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2436</x>
      <y>672</y>
      <w>288</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>ComputerPlayer
--
- computer: Computer
--
+ ComputerPlayer(computer: Computer, isDark: boolean): ComputerPlayer
+ getComputer(): Computer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2298</x>
      <y>636</y>
      <w>120</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;40.0;10.0;40.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2400</x>
      <y>654</y>
      <w>126</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0;190.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2922</x>
      <y>480</y>
      <w>174</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>Replay
--
- gameId: String
- player1: Player
- player2: Player
- player1Won: boolean
- player2Won: boolean
- gameMoves: List&lt;Moves&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1488</x>
      <y>1032</y>
      <w>18</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;300.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1146</x>
      <y>480</y>
      <w>174</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>Avatar
--
- avatarURL: String
--
+ getAvatarURL(): String
+ getAvatarURL(): String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2202</x>
      <y>72</y>
      <w>126</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>UserList
--
- users: List&lt;User&gt;
- selectedUser: User
--
+ loadUsersFromDB(): void
+ blockSelectedUser(): void
+ deleteSelectedUser(): void
+ selectUser(user: User): void
+ getUserList(): List&lt;User&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2346</x>
      <y>102</y>
      <w>288</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>ReplayList
--
- replays: List&lt;Replay&gt;
--
+ loadReplaysFromDB(currentUser: User, chessReplays: boolean): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2676</x>
      <y>474</y>
      <w>174</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>ReplayPlayer
--
- moveNumber: int
- board: Board
--
+ playReplay(): void
+ getMoveNumber(): int
+ playFromMove(moveNumber: int): void
+ nextMove(): void
+ lastMove(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2460</x>
      <y>492</y>
      <w>228</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
uses</panel_attributes>
    <additional_attributes>10.0;20.0;360.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2844</x>
      <y>516</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
- replay
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2838</x>
      <y>1242</y>
      <w>126</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>MatchUp
--
- opponent: HumanPlayer
- connection: Connection
--
+ getOpponent(): HumanPlayer
+ getConnection(): Connection
+ createGame(): Game</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1536</x>
      <y>384</y>
      <w>102</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>AvatarSelector
--
+ loadAvatars(): void
+ selectAvatar(): Avatar</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1212</x>
      <y>408</y>
      <w>336</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=n
- avatars</panel_attributes>
    <additional_attributes>540.0;20.0;10.0;20.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1632</x>
      <y>402</y>
      <w>612</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
uses</panel_attributes>
    <additional_attributes>10.0;20.0;1000.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1368</x>
      <y>1458</y>
      <w>192</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>300.0;140.0;300.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1194</x>
      <y>1458</y>
      <w>192</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0;300.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>1458</y>
      <w>540</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0;880.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>492</x>
      <y>1458</y>
      <w>894</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0;1470.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>1458</y>
      <w>1248</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0;2060.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1542</x>
      <y>1458</y>
      <w>366</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>590.0;140.0;590.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1890</x>
      <y>1458</y>
      <w>366</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>590.0;140.0;590.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2238</x>
      <y>1458</y>
      <w>366</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>590.0;140.0;590.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
